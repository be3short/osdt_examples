rc_filter: # create the ball system
  <f: osdt.create_system
  x:
    <f: osdt_examples.models.ball.State
    y_position: 1.0
    y_velocity: 2.0
  vars:
    p:osdt_examples.models.rc_filter_pwm.Params:
        <f: "osdt_examples.models.rc_filter_pwm.Params"
        resistor: 1500.0
        capacitor: 10.0e-6
        max_voltage: 3.3
        frequency: 5000.0
        duty_cycle: .3
  c: "osdt_examples.models.rc_filter_pwm.C"
  f: "osdt_examples.models.rc_filter_pwm.F"
  d: "osdt_examples.models.rc_filter_pwm.D"
  g: "osdt_examples.models.rc_filter_pwm.G"
  u: "osdt_examples.models.rc_filter_pwm.U"
  y: "osdt_examples.models.rc_filter_pwm.Y"
  id: "rc_pwm"

opfile.return: v:rc_filter

: # adjust the integrator
  <f: osdt_examples.applications.rc_filter_pwm.adjust_integrator_step
  system_id:  "rc_pwm"


: # run the simulation
  <f: osdt.run
  time: 2.0
  jumps: 2000000

figure: # create the figure
  <f: osdt.create_figure
  width: 800
  height: 600
  layout: [[1],[2],[3]]
  title: Bouncing Ball

# plot data (compressed yaml form)
: {<f: v:figure:plot, subplot: 1, y: v_out}
: {<f: v:figure:plot, subplot: 2, y: v_in}
: {<f: v:figure:plot, subplot: 3, y: toggle_timer}

: # export the figure
  <f: v:figure:export
  path: figure1
  format: png
  display: true

: # display figures
  <f: osdt.display