systems: {~~: "osdt.load_objfile", path: "::system_file", controller_id: "Controller (Sensor)", vehicle_id: "Vehicle (Sensor)"}
systems_unsampled: {~~: "osdt.load_objfile", path: "::system_file", controller_id: "Controller (Direct)", vehicle_id: "Vehicle (Direct)"}

vehicle: "::systems::vehicle"
controller: "::systems::controller"
vehicle_unsampled: "::systems_unsampled::vehicle"
controller_unsampled: "::systems_unsampled::controller"

# connect unsampled vehicle and controller
: {~~: "::vehicle_unsampled::set", key: "~~osdt_example.models.dubins_vehicle.CONTROLLER", value: "::controller_unsampled"}
: {~~: "::controller_unsampled::set", key: "~~osdt_example.models.dubins_controller.VEHICLE", value: "::vehicle_unsampled"}

# create sample and hold sensors for sampled vehicle and controller
sample_and_hold_vehicle: {~~: "osdt.load_objfile", path: "osdt_example/objfiles/sample_and_hold_system_multi.yaml", sample_input: "::vehicle",
    sample_fields: ["x_position","y_position","orientation"], sampler_id: "Vehicle Sensor Value", sample_period: "::systems::sample_period"}

sh_vehicle: "::sample_and_hold_vehicle::system"

sample_and_hold_controller: {~~: "osdt.load_objfile", path: "osdt_example/objfiles/sample_and_hold_system_multi.yaml", sample_input: "::controller", 
    sample_fields: ["turn","velocity"], sampler_id: "Controller Sensor Value", sample_period: "::systems::sample_period"}

sh_controller: "::sample_and_hold_controller::system"

# connect sampled vehicle and controller to sensors
: {~~: "::vehicle::set", key: "~~osdt_example.models.dubins_vehicle.CONTROLLER", value: "::sh_controller"}
: {~~: "::controller::set", key: "~~osdt_example.models.dubins_controller.VEHICLE", value: "::sh_vehicle"}


: {~~: "osdt.run", time: 40.0, jumps: 10000}

: {~~: "~~osdt.load_objfile", path: "osdt_example/objfiles/dubins/dubins_figures.yaml"}

: {~~: "osdt.display"}